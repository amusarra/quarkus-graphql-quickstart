##
## This section configure the HTTP layer of the application
##

# Enable or disable the HTTP request/response compression. Default is false.
# For more details, see https://quarkus.io/guides/rest#http-compression
quarkus.http.enable-compression=true

# The media types that should be compressed. Default is empty.
# For more details, see https://quarkus.io/guides/rest#http-compression
quarkus.http.compress-media-types=application/json,application/xml,text/html,text/plain

# Setting the key store file
# For default environment, the key store file is located in the resources folder
# For prod environment, the key store file is located in the /security/keystore folder
# mounted as a secret volume
quarkus.http.ssl.certificate.key-store-file=app-keystore.p12
%prod.quarkus.http.ssl.certificate.key-store-file=/security/keystore/app-keystore.p12

# Setting the key store password
# For default environment, the password is hardcoded
# For prod environment, the password is managed through a secret
# See the file src/main/kubernetes/common.yml where the secret is defined
quarkus.http.ssl.certificate.key-store-password=YXBwLWtleXN0b3JlLnAxMg==
%prod.quarkus.http.ssl.certificate.key-store-password=${APP_KEYSTORE_PASSWORD}

# Setting the key store type (PKCS12)
quarkus.http.ssl.certificate.key-store-file-type=PKCS12

##
## This section configure the options for native image
##

# Additional resources to include in the native image
quarkus.native.resources.includes=app-keystore.p12

# Smallrye GraphQL configuration
quarkus.smallrye-graphql.root-path=api/graphql

# H2 configuration (default)
quarkus.datasource.db-kind=h2
quarkus.datasource.jdbc.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#quarkus.datasource.jdbc.url=jdbc:h2:tcp://localhost:9092/mem:quarkus

# ORM configuration
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.sql-load-script=sample_data.sql
quarkus.hibernate-orm.log.sql=true

##
## This section configure the OpenShift extension
## For more info see https://quarkus.io/guides/deploying-to-openshift
##

# If true, the service will be exposed outside the cluster
# and will be assigned a route.
# If false, the service will only be accessible within the cluster (default)
quarkus.openshift.route.expose=true

# The target named port. If not provided, it will be deducted
# from the Service resource ports. Options are: "http" and "https".
quarkus.openshift.route.target-port=https

## Route TLS configuration:
# The termination type of the route. Options are: "edge",
# "reencrypt", and "passthrough".
quarkus.openshift.route.tls.termination=passthrough

# The desired behavior for insecure connections to a route.
quarkus.openshift.route.tls.insecure-edge-termination-policy=None

# Configure the secret volume for the application keystore
quarkus.openshift.secret-volumes."app-keystore-secret-volume".secret-name=app-keystore-secret
quarkus.openshift.secret-volumes."app-keystore-secret-volume".items."app-keystore.p12".path=app-keystore.p12
quarkus.openshift.secret-volumes."app-keystore-secret-volume".default-mode=0600
quarkus.openshift.mounts."app-keystore-secret-volume".path=/security/keystore
quarkus.openshift.mounts."app-keystore-secret-volume".read-only=true

# The name of the Secret that contains the database URL (that will be contained the username and password)
# and the application keystore password.
quarkus.openshift.env.secrets=db-username-password,db-url,minio-access-key,app-keystore-password

# Define the number of replicas for the deployment
quarkus.openshift.replicas=2

# The base image to be used when a container image is being produced for the jar build.
# The value of this property is used to create an ImageStream for the builder image used in
# the Openshift build. When it references images already available in the internal Openshift
# registry, the corresponding streams are used instead. When the application is built against
# Java 21 or higher.
#quarkus.openshift.base-jvm-image=registry.access.redhat.com/ubi9/openjdk-21:1.20-2.1729773471
quarkus.openshift.base-jvm-image=registry.redhat.io/ubi9/openjdk-21:1.21-3.1736923862

# The base image to be used when a container image is being produced for the native build.
quarkus.openshift.base-native-image=quay.io/quarkus/ubi-quarkus-native-binary-s2i:2.0

# PostgreSQL configuration (production)
%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.jdbc.url=${DB_URL}
%prod.quarkus.datasource.jdbc.max-size=20
%prod.quarkus.datasource.username=${DB_USERNAME}
%prod.quarkus.datasource.password=${DB_PASSWORD}

# ORM configuration (production)
%prod.quarkus.hibernate-orm.log.sql=false

# MinIO configuration
%prod.quarkus.minio.url=http://minio
%prod.quarkus.minio.port=9000
%prod.quarkus.minio.secure=false
%prod.quarkus.minio.access-key=${MINIO_USER_ACCESS_KEY}
%prod.quarkus.minio.secret-key=${MINIO_USER_SECRET_KEY}

##
## This section configure the logging
##
%dev.quarkus.log.category."it.dontesta.labs.quarkus.graphql.s3.service".level=DEBUG
